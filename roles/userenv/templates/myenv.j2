export TERM=xterm-256color

source ~/Dropbox/Entwicklung/environment
# source {{ localinstallation }}/autoenv/activate.sh
# work with zsh now, it includes good plugins already
# source {{ localinstallation }}/liquidprompt/liquidprompt

_atocker() {
docker run  \
    --rm \
    -it \
    --device /dev/dri \
    -v /etc/localtime:/etc/localtime:ro \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v `pwd`:/work \
    -v $HOME/Dropbox/appconfig:/config \
    -v $HOME/.gitconfig:/devhome/.gitconfig \
    -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent \
    -v /var/run/dbus:/var/run/dbus:ro \
    -v /etc/machine-id:/etc/machine-id:ro \
    -e DISPLAY=$DISPLAY \
    -e LANG=$LANG \
    -e HOSTUSER=`id -un` \
    -e HOSTGROUP=`id -gn` \
    -e HOSTUSERID=`id -u` \
    -e HOSTGROUPID=`id -g` \
    -e WORKSPACE=`pwd | cut --complement -d / -n -f 2,3` \
    -e XAUTHORITY=/.XAUTHORITY -v $XAUTHORITY:/.XAUTHORITY \
    quay.io/ulrichschreiner/atocker "$1"
}
alias gbatom="_atocker gb"
alias atm="_atocker"

_vsc() {
  CFGPATH=$HOME/Dropbox/appconfig`pwd | cut --complement -d / -n -f 2,3`
  mkdir -p $CFGPATH
  DBUSPATH=`echo $DBUS_SESSION_BUS_ADDRESS | awk -F "=" ' { print $2 } '`
  docker run -it --rm \
      --privileged \
      --security-opt=seccomp:unconfined \
      -v /tmp/.X11-unix:/tmp/.X11-unix  \
      -v `pwd`:`pwd` \
      -w `pwd` \
      -v $DBUSPATH:$DBUSPATH \
      -v $CFGPATH:/config \
      -e DISPLAY=unix$DISPLAY \
      -v $HOME/.gitconfig:/devhome/.gitconfig \
      -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent \
      -v /var/run/dbus:/var/run/dbus:ro \
      -v /etc/machine-id:/etc/machine-id:ro \
      --device /dev/dri \
      -e LANG=$LANG \
      -e HOSTUSER=`id -un` \
      -e HOSTGROUP=`id -gn` \
      -e HOSTUSERID=`id -u` \
      -e HOSTGROUPID=`id -g` \
      -e WORKSPACE=`pwd` \
      -e XAUTHORITY=/.XAUTHORITY -v $XAUTHORITY:/.XAUTHORITY \
      -e DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS \
      quay.io/ulrichschreiner/vsc "$@"
}

alias vsc=_vsc

_sphinx() {
  docker run -u `id -u`:`id -g` -it --rm -v `pwd`:/doc ulrichschreiner/sphinx "$@"
}
alias sphinx=_sphinx

_dme () {
  eval $(docker-machine env "$1")
}
alias dme=_dme
alias dm=docker-machine

alias dockergc='docker rmi $(docker images -q --filter "dangling=true")'
alias dockviz="docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock nate/dockviz"
alias icafox="~/workspaces/ize0h88/dockers/icafox/icafox"

# don't forget to do a "npm config set prefix ~/npm"
export NODE_PATH="$HOME/npm/lib/node_modules"

# GOROOT is only required if not /usr/local/go, but leave it here
export GOROOT={{go_base}}
export GOPATH=~/development:/go
export PATH=~/bin:~/go/bin:{{go_base}}/bin:{{goapp_base}}:~/npm/bin:$PATH

export ANSIBLE_CONFIG_DIR=$HOME/Dropbox/ansible-config
export EDITOR='vim'

function prev() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new `printf %q "$PREV"`"
}
function pet-select() {
  BUFFER=$(pet search --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle redisplay
}
zle -N pet-select
bindkey '^s' pet-select

