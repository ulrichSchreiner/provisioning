export TERM=xterm-256color

source ~/ownCloud/Entwicklung/environment

alias s3cmd="docker run -it --rm -e aws_key=${S3_BUCKET_BACKUP_KEY} -e aws_secret=${S3_BACKUP_BACKUP_SECRET} -e cmd=interactive -v $HOME:$HOME garland/docker-s3cmd /bin/sh"

_atocker() {
  DBPATH=$(echo $DBUS_SESSION_BUS_ADDRESS|cut -d '=' -f2)
docker run  \
    --rm \
    -it \
    --net=host \
    --privileged \
    --security-opt=seccomp:unconfined \
    --device /dev/dri \
    -v /etc/localtime:/etc/localtime:ro \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v `pwd`:/work \
    -v $HOME/ownCloud/appconfig:/config \
    -v $HOME/.gitconfig:/devhome/.gitconfig \
    -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent \
    -v /var/run/dbus:/var/run/dbus:ro \
    -v $DBPATH:/dbus \
    -e DBUS_SESSION_BUS_ADDRESS="unix:path=/dbus" \
    -v /etc/machine-id:/etc/machine-id:ro \
    -e DISPLAY=$DISPLAY \
    -e xDISABLE_GPU="--disable-gpu" \
    -e LANG=$LANG \
    -e HOSTUSER=`id -un` \
    -e HOSTGROUP=`id -gn` \
    -e HOSTUSERID=`id -u` \
    -e HOSTGROUPID=`id -g` \
    -e WORKSPACE=`pwd | cut --complement -d / -n -f 2,3` \
    -e XAUTHORITY=/.XAUTHORITY -v $XAUTHORITY:/.XAUTHORITY \
    quay.io/ulrichschreiner/atocker "$1"
}
alias gbatom="_atocker gb"
alias atm="_atocker"

_sphinx() {
  docker run -u `id -u`:`id -g` -it --rm -v `pwd`:/doc ulrichschreiner/sphinx "$@"
}
alias sphinx=_sphinx

alias dockergc='docker rmi $(docker images -q --filter "dangling=true")'
alias icafox="~/workspaces/ize0h88/dockers/icafox/icafox"
alias ccat='highlight -O ansi'
alias kubebox='docker pull astefanutti/kubebox && docker run -it --rm -v ~/.kube/:/home/node/.kube/:ro astefanutti/kubebox'
alias xclip="xclip -selection c"
alias gdf="git difftool -x meld --dir-diff"

# don't forget to do a "npm config set prefix ~/npm"
export NODE_PATH="$HOME/npm/lib/node_modules"

# GOROOT is only required if not /usr/local/go, but leave it here
export PATH=~/bin:~/go/bin:{{go_base}}/bin:{{goapp_base}}:~/npm/bin:$PATH

export ANSIBLE_CONFIG_DIR=$HOME/ownCloud/ansible-config
export EDITOR='vim'
export GPG_TTY=$(tty)

function prev() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new `printf %q "$PREV"`"
}
function pet-select() {
  BUFFER=$(pet search --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle redisplay
}
zle -N pet-select
bindkey '^s' pet-select

export CDPATH=.:~/go/src/gitlab.com/globalsafetrack:~/go/src/git.f-i-ts.de/devops:~/workspaces:~/go/src/git.f-i-ts.de/cloud-native
