export TERM=xterm-256color
export HOSTNAME=`hostnamectl hostname`
export PULUMI_SKIP_UPDATE_CHECK=true

source ~/Nextcloud/Entwicklung/environment

source /usr/share/bash-completion/completions/kubie

alias s3cmd="docker run -it --rm -e aws_key=${S3_BUCKET_BACKUP_KEY} -e aws_secret=${S3_BACKUP_BACKUP_SECRET} -e cmd=interactive -v $HOME:$HOME garland/docker-s3cmd /bin/sh"

_sphinx() {
  docker run -u `id -u`:`id -g` -it --rm -v `pwd`:/doc ulrichschreiner/sphinx "$@"
}
alias sphinx=_sphinx

alias dockergc='docker rmi $(docker images -q --filter "dangling=true")'
alias icafox="~/workspaces/ize0h88/dockers/icafox/icafox"
alias kubebox='docker pull astefanutti/kubebox && docker run -it --rm -v ~/.kube/:/home/node/.kube/:ro astefanutti/kubebox'
alias xclip="xclip -selection c"
alias gdf="git difftool -x meld --dir-diff"
alias vi="nvim"
alias gtp='gotop -p -s -c monokai'
alias history='omz_history -E | tac | fzf'
alias fuck='sudo $(fc -ln -1)'
alias ls='lsd'
alias v='code .'
# allow watch to expand aliases
alias watch='watch '
alias c=cloudctl
alias ctl=/home/usc/workspaces/metal/fi-ts/cloudctl/bin/cloudctl-linux-amd64
alias m=metalctl
alias t=go-task
alias o=xdg-open
alias pacbrowse="pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'"
alias docker-make='docker run -it --rm -v /run/docker.sock:/run/docker.sock:ro -v "$(pwd)":"$(pwd)" -w "$(pwd)" metalstack/docker-make $@'
alias cpu-frequency='watch grep \"cpu MHz\" /proc/cpuinfo'
alias pacdiff='DIFFPROG=meld pacdiff'
alias k8s-netpod='kubectl run -i --tty nettest --image=registry.gitlab.com/ulrichschreiner/toolbox --image-pull-policy Always -- bash'
alias k8s-rmevicted="kubectl get pods | grep Evicted | awk '{print \$1}' | xargs kubectl delete pod"
alias kwin-debug-console="qdbus org.kde.KWin /KWin org.kde.KWin.showDebugConsole"

__meitrack_events() {
  logcli -qo raw query -t '{app="meitrack-server",stage="prod"} |="binary" | json | line_format "{{ '{{' }}.binary{{ '}}' }}"' | xargs -I{} sh -c "echo {} | base64 -d | hexyl"
}
alias meitrack-events=__meitrack_events

__cluster_ls_fzf() {
{% raw %}
  cloudctl cluster ls  -o template --template "{{.ID}} {{.Tenant}} {{.Name}} {{.PartitionID}}" | fzf --bind=up:preview-up,down:preview-down,ctrl-u:preview-half-page-up,ctrl-d:preview-half-page-down --preview 'cloudctl cluster describe -o json $(echo {} | cut -d " " -f1) | bat -l json --color always --style numbers '
{% endraw %}
}
alias cls=__cluster_ls_fzf

__update_base_images() {
  images=(
    registry.gitlab.com/ulrichschreiner/base/ubuntu:22.04
    registry.gitlab.com/ulrichschreiner/base/debian:bullseye-slim
    alpine:3
    registry.gitlab.com/ulrichschreiner/toolbox
  )
  for i in $images
  do
    docker pull $i
  done
}
alias updateBaseImages=__update_base_images

# don't forget to do a "npm config set prefix ~/npm"
export NODE_PATH="$HOME/npm/lib/node_modules"

# GOROOT is only required if not /usr/local/go, but leave it here
export PATH=~/bin:~/.krew/bin:~/go/bin:{{go_base}}/bin:~/npm/bin:~/.cargo/bin:~/Nextcloud/bin:~/tools/git-fuzzy/bin:/usr/local/rga/:$PATH

export ANSIBLE_CONFIG_DIR=$HOME/Nextcloud/ansible-config
export EDITOR='nvim'
export GPG_TTY=$(tty)

export CDPATH=.:~/go/src/gitlab.com/globalsafetrack:~/workspaces/ulrichSchreiner:~/workspaces

export GITSTATUS_LOG_LEVEL=DEBUG

export ANDROID_HOME=~/Android/Sdk
export ANDROID_SDK_ROOT=$ANDROID_HOME
