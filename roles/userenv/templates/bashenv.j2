source /usr/local/autoenv/activate.sh
source /usr/local/liquidprompt/liquidprompt

_atocker() {
docker run  \
    --rm \
    -it \
    --device /dev/dri \
    -v /etc/localtime:/etc/localtime:ro \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -v `pwd`:/work \
    -v $HOME/.config:/config \
    -v $HOME/.gitconfig:/devhome/.gitconfig \
    -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent \
    -e DISPLAY=$DISPLAY \
    -e LANG=$LANG \
    -e HOSTUSER=`id -un` \
    -e HOSTGROUP=`id -gn` \
    -e HOSTUSERID=`id -u` \
    -e HOSTGROUPID=`id -g` \
    -e WORKSPACE=`pwd` \
    quay.io/ulrichschreiner/atocker "$1"
}
alias gbatom=_atocker
alias atm="_atocker plain"

_vsc() {
  docker run -it --rm \
      --privileged \
      -v /tmp/.X11-unix:/tmp/.X11-unix  \
      -v `pwd`:`pwd` \
      -v $HOME/.config:/config \
      -e DISPLAY=unix$DISPLAY \
      -v $HOME/.gitconfig:/devhome/.gitconfig \
      -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent \
      --device /dev/dri \
      -e LANG=$LANG \
      -e HOSTUSER=`id -un` \
      -e HOSTGROUP=`id -gn` \
      -e HOSTUSERID=`id -u` \
      -e HOSTGROUPID=`id -g` \
      -e WORKSPACE=`pwd` \
      quay.io/ulrichschreiner/vsc "$@"
}
alias vsc=_vsc

_ansible() {
  subc=$1
  shift
  docker run -it --rm -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent -v `pwd`:/work ulrichschreiner/ansible $subc "$@"
}
_ansible_playbook() {
  _ansible playbook "$@"
}
_ansible_vault() {
  _ansible vault "$@"
}
_ansible_doc() {
  _ansible doc "$@"
}
_ansible_pull() {
  _ansible pull "$@"
}
_ansible_galaxy() {
  _ansible galaxy "$@"
}
alias ansible-playbook=_ansible_playbook
alias ansible-vault=_ansible_vault
alias ansible-doc=_ansible_doc
alias ansible-pull=_ansible_pull
alias ansible-galaxy=_ansible_galaxy
alias ansible=_ansible

_sphinx() {
  docker run -u `id -u`:`id -g` -it --rm -v `pwd`:/doc ulrichschreiner/sphinx "$@"
}
alias sphinx=_sphinx

alias dockergc='docker rmi $(docker images -q --filter "dangling=true")'
alias dockviz="docker run --rm -v /var/run/docker.sock:/var/run/docker.sock nate/dockviz"


# don't forget to do a "npm config set prefix ~/npm"
export NODE_PATH="$HOME/npm/lib/node_modules"

# GOROOT is only required if not /usr/local/go, but leave it here
export GOROOT={{go_base}}

export PATH=~/bin:~/go/bin:{{go_base}}/bin:{{goapp_base}}:~/npm/bin:$PATH
