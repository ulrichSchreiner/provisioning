- name: create local go workspace
  file: path=~/go state=directory mode=0755

- name: create common subdirs
  file: path=~/go/{{item}} state=directory mode=0755
  with_items:
    - pkg
    - bin
    - src

- name: create workspaces for development (github, bitbucket, fits)
  file: path=~/workspaces/{{item}} state=directory mode=0755
  with_items:
    - ulrichSchreiner
    - usc
    - isw
    - ize0h88

- name: create local bin
  file: path=~/bin state=directory mode=0755

- name: create local tools
  file: path=~/tools state=directory mode=0755

- name: install some tool scripts
  copy:
    src: "{{ item }}"
    dest: "~/bin"
    mode: 0755
  with_fileglob:
    - "tools/*"

- name: make the go directory a GOPATH enabled workspace
  template: src=goenv.j2 dest=~/go/.envrc mode=664

- name: install go tools
  include_tasks: lib/goget.yaml
  with_items: "{{gogetable_tools}}"

- name: create environment for sourcing
  template: src=myenv.j2 dest=~/.myenv

- name: source the new environment
  lineinfile: dest=~/.bashrc regexp='^source ~/.myenv' line='source ~/.myenv'

- name: set zsh as default for tmux
  lineinfile: dest=~/.tmux.conf regexp="^set-option -g default-shell /bin/zsh" line="set-option -g default-shell /bin/zsh" create=yes state=present

- name: set shortcut to sync keys in tmux
  lineinfile: dest=~/.tmux.conf regexp="synchronize-panes on" line="bind -n C-x setw synchronize-panes on" create=yes state=present

- name: set shortcut to sync keys in tmux (off)
  lineinfile: dest=~/.tmux.conf regexp="synchronize-panes off" line="bind -n M-x setw synchronize-panes off" create=yes state=present

- name: create a vsc starter script
  copy: src=vsc dest=/usr/local/bin/vsc mode=0755
  become: yes

- name: create a vsr starter script
  copy: src=vsr dest=/usr/local/bin/vsr mode=0755
  become: yes

- name: create a starter for chrome with remote debugging
  copy: src=chromedebug dest=/usr/local/bin/chromedebug mode=0755
  become: yes

- name: set the npm configuration
  copy: src=npmrc dest=~/.npmrc

- name: check if npm-check-updates is installed
  shell: npm list -g --depth 1 npm-check-updates
  ignore_errors: yes
  register: ncu
  check_mode: False
  changed_when: False

- name: install npm-check-updates if needed
  shell: npm install -g npm-check-updates
  when: ncu.rc != 0

- name: insert/update my local ssh config
  blockinfile:
    create: yes
    mode: "0600"
    dest: ~/.ssh/config
    block: |
      AddKeysToAgent yes
      Host *
         ForwardAgent yes

- name: install oh-my-zsh
  git: >
    repo=https://github.com/robbyrussell/oh-my-zsh.git
    dest=~/.oh-my-zsh

- name: install zsh-peco-history
  git: >
    repo=https://github.com/jimeh/zsh-peco-history.git
    dest=~/.oh-my-zsh/custom/plugins/zsh-peco-history

- name: install kube-ps1
  git: >
    repo=https://github.com/jonmosco/kube-ps1.git
    dest=~/tools/kube-ps1

- name: install ktx
  git: >
    repo=https://github.com/heptio/ktx.git
    dest=~/tools/ktx

- name: install ktx binary
  file:
    src: ~/tools/ktx/ktx
    dest: ~/bin/ktx
    state: link

- name: install fubectl
  git: >
    repo=https://github.com/kubermatic/fubectl.git
    dest=~/tools/fubectl

- name: install my zshrc
  template: src=zshrc.j2 dest=~/.zshrc

- name: install z
  git: >
    repo=https://github.com/rupa/z.git
    dest=~/tools/z

- name: create the folder for the gpg-agent-startup
  file: path=~/.config/plasma-workspace/env/ state=directory mode=0755

- name: start gpg-agent when kde starts
  copy: src=gpg-agent-startup.sh dest=~/.config/plasma-workspace/env/gpg-agent-startup.sh mode=0755

- name: copy terraform configuration
  copy: src=terraformrc dest=~/.terraformrc
