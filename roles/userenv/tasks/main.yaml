- name: create local go workspace
  file: path=~/go state=directory mode=0755

- name: create common subdirs
  file: path=~/go/{{item}} state=directory mode=0755
  with_items:
    - pkg
    - bin
    - src

- name: create workspaces for development (github, bitbucket, fits)
  file: path=~/workspaces/{{item}} state=directory mode=0755
  with_items:
    - ulrichSchreiner
    - usc
    - isw
    - ize0h88

- name: create local bin
  file: path=~/bin state=directory mode=0755

- name: create local tools
  file: path=~/tools state=directory mode=0755

- name: install some tool scripts
  copy:
    src: "{{ item }}"
    dest: "~/bin"
    mode: 0755
  with_fileglob:
    - "tools/*"

- name: make the go directory a GOPATH enabled workspace
  template: src=goenv.j2 dest=~/go/.envrc mode=664

- name: install go tools
  include_tasks: lib/goget.yaml
  with_items: "{{gogetable_tools}}"

- name: create environment for sourcing
  template: src=myenv.j2 dest=~/.myenv

- name: source the new environment
  lineinfile: dest=~/.bashrc regexp='^source ~/.myenv' line='source ~/.myenv'

- name: set zsh as default for tmux
  lineinfile: dest=~/.tmux.conf regexp="^set-option -g default-shell /bin/zsh" line="set-option -g default-shell /bin/zsh" create=yes state=present

- name: set shortcut to sync keys in tmux
  lineinfile: dest=~/.tmux.conf regexp="synchronize-panes on" line="bind -n C-x setw synchronize-panes on" create=yes state=present

- name: set shortcut to sync keys in tmux (off)
  lineinfile: dest=~/.tmux.conf regexp="synchronize-panes off" line="bind -n M-x setw synchronize-panes off" create=yes state=present

- name: enable mouse in tmux
  lineinfile: dest=~/.tmux.conf regexp="set -g mouse on" line="set -g mouse on" create=yes state=present

- name: create a wrapper for openapi-cli
  copy: src=openapi-cli dest=/usr/local/bin/openapi-cli mode=0755
  become: yes

- name: create a vsc starter script
  copy: src=vsc dest=/usr/local/bin/vsc mode=0755
  become: yes

- name: create a vsc-go starter script
  copy: src=vsc_go dest=/usr/local/bin/vsc-go mode=0755
  become: yes

- name: create a starter for chrome with remote debugging
  copy: src=chromedebug dest=/usr/local/bin/chromedebug mode=0755
  become: yes

- name: set the npm configuration
  copy: src=npmrc dest=~/.npmrc

- name: check if npm-check-updates is installed
  shell: npm list -g --depth 1 npm-check-updates
  ignore_errors: yes
  register: ncu
  check_mode: False
  changed_when: False

- name: install npm-check-updates if needed
  shell: npm install -g npm-check-updates
  when: ncu.rc != 0

- name: insert/update my local ssh config
  blockinfile:
    create: yes
    mode: "0600"
    dest: ~/.ssh/config
    block: |
      AddKeysToAgent yes
      Host *
         ForwardAgent yes

- name: install oh-my-zsh
  git: >
    repo=https://github.com/robbyrussell/oh-my-zsh.git
    dest=~/.oh-my-zsh

- name: install zsh-peco-history
  git: >
    repo=https://github.com/jimeh/zsh-peco-history.git
    dest=~/.oh-my-zsh/custom/plugins/zsh-peco-history

- name: install powerlevel10k
  git: >
    repo=https://github.com/romkatv/powerlevel10k.git
    dest=~/.oh-my-zsh/custom/themes/powerlevel10k

- name: symlink the p10k customization
  file:
    src: ~/Nextcloud/Entwicklung/p10k.zsh
    dest: ~/.p10k.zsh
    state: link

- name: symlink pulimi state
  file:
    src: ~/Nextcloud/pulumi-state
    dest: ~/.pulumi
    state: link

- name: install autosuggestion
  git: >
    repo=https://github.com/zsh-users/zsh-autosuggestions.git
    dest=~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

- name: install kube-ps1
  git: >
    repo=https://github.com/jonmosco/kube-ps1.git
    dest=~/tools/kube-ps1

- name: install ktx
  git: >
    repo=https://github.com/heptiolabs/ktx.git
    dest=~/tools/ktx

- name: install fubectl
  git: >
    repo=https://github.com/kubermatic/fubectl.git
    dest=~/tools/fubectl

- name: install my zshrc
  template: src=zshrc.j2 dest=~/.zshrc

- name: install z
  git: >
    repo=https://github.com/rupa/z.git
    dest=~/tools/z

- name: create the folder for the gpg-agent-startup
  file: path=~/.config/plasma-workspace/env/ state=directory mode=0755

- name: start gpg-agent when kde starts
  copy: src=gpg-agent-startup.sh dest=~/.config/plasma-workspace/env/gpg-agent-startup.sh mode=0755

- name: export some environment variables when kde starts
  copy: src=my-plasma-env.sh dest=~/.config/plasma-workspace/env/my-plasma-env.sh mode=0755

- name: create local k3s directory
  file: path=~/tools/k3s state=directory mode=0755

- name: copy k3s compose file
  copy: src=k3s-compose.yml dest=~/tools/k3s/docker-compose.yml

- name: copy my nanorc
  copy: src=nanorc dest=~/.nanorc

- name: terraform plugin directory
  file: path=~/.terraform.d/plugins/linux_amd64/ state=directory mode=0755

- name: symlink terraform ct plugin
  file: >
    src={{localinstallation}}/terraform-provider-ct-{{terraform_provider_ct_version}}/terraform-provider-ct
    dest=~/.terraform.d/plugins/linux_amd64/terraform-provider-ct_v{{terraform_provider_ct_version}}
    state=link

- name: symlink the wd (warp) state file
  file:
    src: ~/Nextcloud/Entwicklung/warprc
    dest: ~/.warprc
    state: link

- name: create local vscode config settings
  include: vscode.yaml
  loop:
    - "Code"

- name: symlink the gcloud config
  file:
    src: ~/Nextcloud/Entwicklung/gcloud
    dest: ~/.config/gcloud
    state: link

- name: install my vscode-remote configs
  git: >
    repo=https://github.com/ulrichSchreiner/vscode-remote-configs.git
    dest=~/.config/vscode

- name: install zsh syntax highlighter
  git: >
    repo=https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest=~/tools/zsh-syntax-highlighting

- name: install zsh syntax highlighter
  git: >
    repo=https://github.com/bigH/git-fuzzy
    dest=~/tools/git-fuzzy

- name: install desktop files
  copy:
    src: "{{ item }}"
    dest: "~/.local/share/applications"
    mode: 0600
  with_fileglob:
    - "desktop-files/*.desktop"

- name: install broot
  file:
    src: ~/Nextcloud/Entwicklung/broot
    dest: ~/.config/broot
    state: link

- name: Check for ~/go/src/git.f-i-ts.de/cloud-native/ exists
  stat: path=~/go/src/git.f-i-ts.de/cloud-native/
  register: cnative

- name: create cloudctl config directory
  file: path=~/.cloudctl state=directory mode=0755

- name: install cloudctl config
  file:
    src: ~/Nextcloud/Entwicklung/cloudctl-config.yaml
    dest: ~/.cloudctl/config.yaml
    state: link

- name: create metalctl config directory
  file: path=~/.metalctl state=directory mode=0755

- name: install metalctl config
  file:
    src: ~/Nextcloud/Entwicklung/metalctl-config.yaml
    dest: ~/.metalctl/config.yaml
    state: link

- name: set ignore pattern for nextcloud client
  lineinfile: dest=~/.config/Nextcloud/sync-exclude.lst line="{{ item }}" state=present
  with_items: "{{ nextcloud_ignore }}"

- name: create git config directory
  file: path=~/.config/git state=directory mode=0755

- name: symlink for git credentials
  file:
    src: ~/Nextcloud/Entwicklung/git-credentials
    dest: ~/.config/git/credentials
    state: link

- name: symlink the topgrade config
  file:
    src: ~/Nextcloud/Entwicklung/topgrade.toml
    dest: ~/.config/topgrade.toml
    state: link

- name: install ff-settings
  git:
    repo: https://github.com/ulrichSchreiner/ff-settings.git
    dest: ~/tools/ff-settings
  register: ffsettingsclone

- command: echo ~
  register: instdir

- name: install ff-settings
  become: yes
  when: ffsettingsclone.changed
  ansible.builtin.shell: "./local-install.sh"
  args:
    chdir: "{{instdir.stdout}}/tools/ff-settings"

- name: Enable and start ff-setttings
  ansible.builtin.systemd:
    daemon-reload: yes
    name: ff-settings
    state: started
    enabled: yes
    scope: user

- name: install my FF settings
  template: src=ff-settings-user.js dest=~/.config/ff-settings/user.js

- name: keyledsd.conf file installation (keyledsd is autostarted in /etc/xdg/autostart/)
  ansible.builtin.copy:
    src: keyledsd.conf
    dest: ~/.config/keyledsd.conf
  when: "'usc-precision' == ansible_hostname"

- name: enable ssh-agent on startup
  ansible.builtin.systemd:
    name: ssh-agent
    state: started
    enabled: yes
    scope: user