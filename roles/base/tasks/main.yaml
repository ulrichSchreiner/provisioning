- lineinfile: dest=/etc/sysctl.d/10-magic-sysrq.conf state=present line="kernel.sysrq = 1" regexp="^kernel.sysrq.*"
  when: ansible_distribution == "Ubuntu"

- replace: dest=/etc/ssh/ssh_config replace="    AddressFamily inet" regexp="^#   AddressFamily.*"
  when: ansible_distribution == "Ubuntu"

- name: do ubuntu specific things
  block:
    - apt_repository:
        repo: "{{item}}"
        state: present
      with_items:
        - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
        - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
        - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
        - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
        - 'ppa:git-core/ppa'

    - name: google cloud packages
      apt_key: >
        url={{ google_cloud_url }}
        state=present

    - name: add key for dropbox
      apt_key: >
        keyserver={{ dropbox_keyserver }}
        id={{ dropbox_key }}
        state=present

    - name: add key for docker
      apt_key: >
        url={{ docker_key_url }}
        state=present

    - name: add key for google chrome
      apt_key: >
        url={{ chrome_key_url }}
        state=present

    - name: add key for packagecloud
      apt_key: >
        url={{ packagecloud_key_url }}
        state=present

    - name: activate addons apt sources
      template: src=addons.list.j2 dest=/etc/apt/sources.list.d/addons.list
      register: newsources

    - apt: update_cache=yes
      when: newsources is changed

    - name: install base packages
      apt: name={{base_packages}} state=present
  when: ansible_distribution == "Ubuntu"

- name: do fedora specific things
  block:
    - name: install some repos
      template: src={{item}} dest=/etc/yum.repos.d/{{item | basename }}
      with_fileglob:
        - "../templates/*.repo"

    - name: install base modules
      command: dnf -y module install {{ item }}
      with_items: "{{ fedora_modules }}"

    - name: install base packages
      dnf: name={{fedora_packages}} state=present
  when: ansible_distribution == "Fedora"

- name: do arch specific things
  block:
    - name: install base packages
      pacman: name={{arch_packages}} state=present
    - name: Add the flathub flatpak repository remote to the user installation
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    - name: Add the KDE flathub flatpak repository remote
      flatpak_remote:
        name: kdeapps
        state: present
        flatpakrepo_url: https://distribute.kde.org/kdeapps.flatpakrepo
    - user:
        name: aur_builder
        group: wheel
        system: yes
    - lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: yes
        validate: 'visudo -cf %s'
    - lineinfile:
        path: /etc/systemd/system.conf
        line: 'DefaultTimeoutStopSec=30s'
  when: ansible_distribution == "Archlinux"

# develop with docker you get after a few hours this error:
#   neighbour: arp_cache: neighbor table overflow!
# so we have to increase some values
- sysctl:
    name: net.ipv4.neigh.default.gc_thresh1
    value: 8096
    sysctl_file: /etc/sysctl.d/docker_dev_neigh_cache.conf
    reload: yes
- sysctl:
    name: net.ipv4.neigh.default.gc_thresh2
    value: 12288
    sysctl_file: /etc/sysctl.d/docker_dev_neigh_cache.conf
    reload: yes
- sysctl:
    name: net.ipv4.neigh.default.gc_thresh3
    value: 16384
    sysctl_file: /etc/sysctl.d/docker_dev_neigh_cache.conf
    reload: yes

- name: enable userns for podman
  sysctl:
    name: kernel.unprivileged_userns_clone
    value: 1
    sysctl_file: /etc/sysctl.d/podman.conf
    reload: yes

- name: set subuid/subgid
  lineinfile: dest=/etc/{{item}} state=present line="usc:100000:65536"
  loop:
    - subuid
    - subgid

