- name: check go version
  command: grep -q "{{golang_version}}" {{go_base}}/VERSION
  register: goversion
  always_run: True
  ignore_errors: True
  changed_when: False

- name: remove old go installation when go version changed
  file: path={{go_base}} state=absent
  when: goversion.rc != 0

- name: create go destination path (recreate if previous task deleted it)
  file: path={{go_base}} state=directory mode=0755

- name: download go
  unarchive: >
    src=https://storage.googleapis.com/golang/go{{golang_version}}.linux-amd64.tar.gz
    dest={{localinstallation}}
    copy=no
  when: goversion.rc != 0

- name: check goapp version
  command: grep -q "{{goapp_version}}" {{goapp_base}}/VERSION
  register: goappversion
  always_run: True
  ignore_errors: True
  changed_when: False

- name: remove old goapp installation when goapp version changed
  file: path={{goapp_base}} state=absent
  when: goappversion.rc != 0

- name: create go/appengine destination path (recreate if previous task deleted it)
  file: path={{goapp_base}} state=directory mode=0755

- name: download go appengine
  unarchive: >
    src=https://storage.googleapis.com/appengine-sdks/featured/go_appengine_sdk_linux_amd64-{{goapp_version}}.zip
    dest={{localinstallation}}
    copy=no
  when: goappversion.rc != 0
